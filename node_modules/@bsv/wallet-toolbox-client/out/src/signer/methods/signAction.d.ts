import { AtomicBEEF, Beef, Transaction as BsvTransaction, SendWithResult, SignActionResult, SignActionSpend, TXIDHexString } from '@bsv/sdk';
import { PendingSignAction, sdk, Wallet } from '../../index.client';
import { ReviewActionResult } from '../../sdk/WalletStorage.interfaces';
export interface SignActionResultX extends SignActionResult {
    txid?: TXIDHexString;
    tx?: AtomicBEEF;
    sendWithResults?: SendWithResult[];
    notDelayedResults?: ReviewActionResult[];
}
export declare function signAction(wallet: Wallet, auth: sdk.AuthId, vargs: sdk.ValidSignActionArgs): Promise<SignActionResultX>;
export declare function makeAtomicBeef(tx: BsvTransaction, beef: number[] | Beef): number[];
export declare function completeSignedTransaction(prior: PendingSignAction, spends: Record<number, SignActionSpend>, wallet: Wallet): Promise<BsvTransaction>;
//# sourceMappingURL=signAction.d.ts.map